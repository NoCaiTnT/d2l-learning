# R-CNN
#   使用启发式搜索算法来选择锚框
#   使用预训练模型来对每个锚框抽取特征, 使用RoI
#   训练一个SVM对类别分类
#   训练一个线性回归模型来预测边缘框偏移
# 兴趣区域(RoI)池化层
#   给定一个锚框, 均匀分割成n×m块, 输出每块里的最大值
#   不管锚框多大, 总是输出nm个值
# Fast RCNN
#   使用CNN对图片抽取特征, 而不是对锚框
#   在CNN抽取完特征后的特征向量上, 再去找到对应的锚框, 再去抽取特征
#   使用RoI池化层对每个锚框生成固定长度特征
# Faster R-CNN
#   使用一个区域提议网络(RPN)来替代启发式搜索来获得更好的锚框
# Mask R-CNN
#   在RoI后面加了一个FCN, 并没有暴力切割, 保留小数
# 总结
#   R-CNN是最早, 也是最有名的一类基于锚框和CNN的目标检测算法
#   Fast/Faster R-CNN持续提升性能
#   Faster R-CNN和Mask R-CNN是在追求高精度场景下的常用算法

# 单发多框检测(SSD)
#   生成锚框: 和RCNN生成锚框一样, 以每个像素为中心生成, 见13.4
# SSD模型
#   一个基础网络来抽取特征, 然后多个卷积层块来减半高宽
#   在每段都生成锚框, 底部段来拟合小物体, 顶部段来拟合大物体
#   对每个锚框预测类别和边缘框
# 总结
#   SSD通过单神经网络来检测模型
#   以每个像素为中心的产生多个锚框
#   在多个段的输出上进行多尺度的检测

# YOLO
#   SSD中锚框大量重叠, 因此浪费了很多计算
#   YOLO将图片均匀分成S×S个锚框
#   每个锚框预测B个边缘框
#   后续版本有持续改进
